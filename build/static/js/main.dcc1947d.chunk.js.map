{"version":3,"sources":["config.js","providers/AuthProvider.js","resources/LoginPage.js","layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["config","process","authContext","createContext","AuthProvider","children","auth","useState","AUTH_PENDING","authStatus","setAuthStatus","useEffect","setTimeout","AUTH_AUTHORIZED","saveLocalstorage","token","expiresDate","refreshToken","localStorage","setItem","clearLocalstorage","removeItem","logout","AUTH_NOT_AUTHORIZED","login","pass","fetch","method","headers","body","then","resp","ok","json","tokenExpires","getNewToken","Error","response","getToken","a","getItem","tokenExpiresDate","currentDate","Date","toUTCString","useAuthProvider","Provider","value","useAuth","useContext","FullscreenLoader","props","style","background","position","top","left","width","height","display","justifyContent","alignItems","PrivateRoute","rest","render","location","to","pathname","state","from","LoginPage","placeholder","Layout","flexDirection","boxShadow","marginRight","href","Home","About","Users","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcc1947d.chunk.js","sourcesContent":["export const config = {\r\n   'apiPath': process.env.REACT_APP_API_PATH\r\n}","import React, { useContext, createContext, useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\r\nimport { config } from '../config';\r\n\r\n/** For more details on\r\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\r\n * refer to: https://usehooks.com/useAuth/\r\n */\r\nconst authContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n   const auth = useAuthProvider();\r\n   return (\r\n      <authContext.Provider value={auth}>\r\n         {children}\r\n      </authContext.Provider>\r\n   );\r\n}\r\n\r\nfunction useAuth() {\r\n   return useContext(authContext);\r\n}\r\n\r\nconst AUTH_PENDING = 'AUTH_PENDING';\r\nconst AUTH_AUTHORIZED = 'AUTH_AUTHORIZED';\r\nconst AUTH_NOT_AUTHORIZED = 'AUTH_NOT_AUTHORIZED';\r\n\r\nfunction useAuthProvider() {\r\n   const [authStatus, setAuthStatus] = useState(AUTH_PENDING);\r\n\r\n   useEffect(() => {\r\n      //MOCK, заглушка для успешной авторизации\r\n      setTimeout(()=>{\r\n         setAuthStatus(AUTH_AUTHORIZED);\r\n      }, 1500);\r\n      return;\r\n\r\n      getToken().then(token => {\r\n         if (token) setAuthStatus(AUTH_AUTHORIZED);\r\n      });\r\n   }, []);\r\n\r\n   const saveLocalstorage = (token, expiresDate, refreshToken) => {\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('authTokenExpires', expiresDate);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n   }\r\n\r\n   const clearLocalstorage = () => {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('authTokenExpires');\r\n   };\r\n\r\n   const logout = () => {\r\n      clearLocalstorage();\r\n      setAuthStatus(AUTH_NOT_AUTHORIZED);\r\n   };\r\n\r\n   const login = (login, pass) => {\r\n      return fetch(config.apiPath + '/login', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: { 'email': login, 'password': pass }\r\n      }).then(resp => {\r\n         if (!resp.ok) return logout();\r\n         return resp.json();\r\n      }).then(json => {\r\n         saveLocalstorage(json.token, json.tokenExpires, json.refreshToken);\r\n      });\r\n   };\r\n\r\n   const getNewToken = (refreshToken) => {\r\n      return fetch(config.apiPath + '/login', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: { 'refresh_token': refreshToken }\r\n      }).then(resp => {\r\n         if (!resp.ok) return resp.json();\r\n         else {\r\n            logout();\r\n            throw new Error('Refresh token error');\r\n         }\r\n      }).then(json => {\r\n         let { response } = json;\r\n         saveLocalstorage(response.token, response.tokenExpires, response.refreshToken);\r\n         return response.token;\r\n      });\r\n   }\r\n\r\n   /*проверяет что токен существует и не истек и возвращает его. если токен истек, рефрешит и возвращает*/\r\n   const getToken = async () => {\r\n      //должен быть явный return new Promise(...)\r\n      /* текущая дата: var currentDate = new Date().toUTCString()\r\n         дата с сервера: var serverDate = new Date(fromServer).toUTCString();\r\n         сравниваем: currentDate < serverDate\r\n      */\r\n      let token = localStorage.getItem('authToken');\r\n      let tokenExpiresDate = localStorage.getItem('authTokenExpires');\r\n      let refreshToken = localStorage.getItem('refreshToken');\r\n      if (token && expiresDate && refreshToken) {\r\n         logout();\r\n         throw new Error('Token does not exist');\r\n      }\r\n\r\n      //TODO: вынести в отдельную функцию\r\n      const currentDate = new Date(new Date().toUTCString());\r\n      const expiresDate = new Date(new Date(tokenExpiresDate).toUTCString());\r\n      if (currentDate < expiresDate) return token;\r\n      else {\r\n         return await getNewToken(refreshToken);\r\n      };\r\n   }\r\n\r\n   const checkToken = async (token) => {\r\n      return fetch(config.apiPath + '/token/check', {\r\n         method: 'GET',\r\n         headers: { 'authorization': token }\r\n      }).then(resp => {\r\n         return resp.json();\r\n      });\r\n   };\r\n\r\n   //ВАЖНО! в каждом ответе данные дополнительно завернуты в объект response т.е. получать их надо так: resp.json() => res.response()\r\n   return {\r\n      authStatus,\r\n      login,\r\n      logout,\r\n      getToken\r\n   };\r\n}\r\n\r\nfunction AuthButton() {\r\n   let history = useHistory();\r\n   let auth = useAuth();\r\n\r\n   return auth.authStatus === AUTH_AUTHORIZED ? (\r\n      <p>\r\n         Welcome!{\" \"}\r\n         <button\r\n            onClick={() => {\r\n               auth.signout(() => history.push(\"/\"));\r\n            }}\r\n         >\r\n            Sign out\r\n      </button>\r\n      </p>\r\n   ) : (\r\n         <p>You are not logged in.</p>\r\n      );\r\n}\r\n\r\nfunction FullscreenLoader(props) {\r\n   return <div style={{background: '#e7ebef', position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n      <span>loading...</span>\r\n   </div>\r\n}\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nexport function PrivateRoute({ children, ...rest }) {\r\n   let auth = useAuth();\r\n   if (auth.authStatus === AUTH_PENDING) return <FullscreenLoader/>\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={({ location }) =>\r\n            auth.authStatus === AUTH_AUTHORIZED ? (\r\n               children\r\n            ) : (\r\n                  <Redirect\r\n                     to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: location }\r\n                     }}\r\n                  />\r\n               )\r\n         }\r\n      />\r\n   );\r\n}\r\n\r\nfunction PublicPage() {\r\n   return <h3>Public</h3>;\r\n}\r\n\r\nfunction ProtectedPage() {\r\n   return <h3>Protected</h3>;\r\n}\r\n\r\nfunction LoginPage() {\r\n   let history = useHistory();\r\n   let location = useLocation();\r\n   let auth = useAuth();\r\n\r\n   let { from } = location.state || { from: { pathname: \"/\" } };\r\n   let login = () => {\r\n      auth.signin(() => {\r\n         history.replace(from);\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <p>You must log in to view the page at {from.pathname}</p>\r\n         <button onClick={login}>Log in</button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AuthProvider;","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function LoginPage(props) {\r\n   return <div>\r\n      <h2>Login page</h2>\r\n      <input placeholder=\"login\" />\r\n      <input placeholder=\"password\" />\r\n   </div>\r\n}\r\n\r\nexport default LoginPage;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport function Layout(props) {\r\n   return <div>\r\n\r\n      {/*top menu*/}\r\n      <div style={{ height: '60px', display: 'flex', flexDirection: 'row', boxShadow: '0px 2px 5px 0px rgb(0 0 0 / 50%)' }}>\r\n         <span>1</span>\r\n         <span>2</span>\r\n      </div>\r\n\r\n      {/*main row*/}\r\n      <div style={{ display: 'flex' }}>\r\n\r\n         {/*menu*/}\r\n         <div style={{marginRight: '30px'}}>\r\n            <nav>\r\n               <ul>\r\n                  <li>\r\n                     <Link to=\"/login\">Login</Link>\r\n                  </li>\r\n                  <li>\r\n                     <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li>\r\n                     <Link to=\"/about\">About</Link>\r\n                  </li>\r\n                  <li>\r\n                     <Link to=\"/users\">Users</Link>\r\n                  </li>\r\n                  <li>\r\n                     <a href=\"/test\">Test</a>\r\n                  </li>\r\n               </ul>\r\n            </nav>\r\n         </div>\r\n\r\n         {/*content*/}\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n   </div>\r\n}\r\n\r\nexport default Layout;","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport jss from 'jss';\r\nimport { ThemeProvider } from 'theming';\r\nimport { AuthProvider, PrivateRoute } from './providers/AuthProvider';\r\nimport { LoginPage } from './resources/LoginPage';\r\nimport { Layout } from './layout/Layout';\r\n\r\nfunction App() {\r\n   return (\r\n      <AuthProvider>\r\n         <Router>\r\n            \r\n            <Switch>\r\n               <PrivateRoute path=\"/login\">\r\n                  <LoginPage />\r\n               </PrivateRoute>\r\n               <PrivateRoute path=\"/about\">\r\n                  <About />\r\n               </PrivateRoute>\r\n               <PrivateRoute path=\"/users\">\r\n                  <Users />\r\n               </PrivateRoute>\r\n               <PrivateRoute path=\"/\">\r\n                  <Home />\r\n               </PrivateRoute>\r\n            </Switch>\r\n\r\n         </Router>\r\n      </AuthProvider>\r\n   );\r\n}\r\n\r\nfunction Home() {\r\n   return <Layout>\r\n      <h2>Home</h2>\r\n   </Layout>;\r\n}\r\n\r\nfunction About() {\r\n   return <Layout>\r\n      <h2>About</h2>\r\n   </Layout>;\r\n}\r\n\r\nfunction Users() {\r\n   return <Layout>\r\n      <h2>Users</h2>\r\n   </Layout>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}